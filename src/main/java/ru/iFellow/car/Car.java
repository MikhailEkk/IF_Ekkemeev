package ru.iFellow.car;
import lombok.Getter;
import lombok.Setter;

import java.util.List;
import java.util.Objects;

@Getter
@Setter
public abstract class Car {
    /** –ú–æ–¥–µ–ª—å –∞–≤—Ç–æ–º–æ–±–∏–ª—è     */
    private String model;

    /** –ë—Ä–µ–Ω–¥ –∞–≤—Ç–æ–º–æ–±–∏–ª—è     */
    private String brand;

    /** –ú–æ—â–Ω–æ—Å—Ç—å –¥–≤–∏–≥–∞—Ç–µ–ª—è     */
    private int enginePower;

    /** –¢–∏–ø —Ç–æ–ø–ª–∏–≤–∞     */
    private String fuelType;

    /** –¢–∏–ø –ö–ü–ü     */
    private String gearShiftBox;

    /** –¶–≤–µ—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª—è     */
    private String color;

    /** –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–ø–ª–∏–≤–∞ –≤ –±–∞–∫–µ     */
    private int fuelQuantity;

    /** –ì–æ–¥ –≤—ã–ø—É—Å–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è     */
    private int year;

    public Car(String model, String brand, int enginePower, String fuelType, String gearShiftBox, String color, int fuelQuantity, int year) {
        this.model = model;
        this.brand= brand;
        this.enginePower = enginePower;
        this.fuelType = fuelType;
        this.gearShiftBox = gearShiftBox;
        this.color = color;
        this.fuelQuantity = fuelQuantity;
        this.year = year;
    }

    /**
     * –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –º–æ—â–Ω–æ—Å—Ç–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—è
     * @param diff –ù–∞ —Å–∫–æ–ª—å–∫–æ –ª.—Å. —É–≤–µ–ª–∏—á–∏—Ç—å –º–æ—â–Ω–æ—Å—Ç—å (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º)
     * @throws IllegalArgumentException –µ—Å–ª–∏ {@code diff <= 0}
     */
    public void increaseEnginePower(int diff){
        this.enginePower += diff;
    }

    /**
     * –ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—å
     */
    public void startEngine(){
        if (getFuelQuantity() > 0) {
            System.out.println(getBrand() + " " + getModel() + " –∑–∞–≤–µ–ª—Å—è! üöóüí®");
        } else {
            System.out.println("–ë–∞–∫ –ø—É—Å—Ç! –ù—É–∂–Ω–æ –∑–∞–ø—Ä–∞–≤–∏—Ç—å—Å—è.");
        }
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ–º–æ–±–∏–ª–µ
     */
    public void getInfoCar(){
        System.out.println("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–≤—Ç–æ–º–æ–±–∏–ª–µ:");
        System.out.println("–ú–æ–¥–µ–ª—å: " + getModel());
        System.out.println("–ë—Ä–µ–Ω–¥: " + getBrand());
        System.out.println("–ú–æ—â–Ω–æ—Å—Ç—å: " + getEnginePower() + " –ª.—Å.");
        System.out.println("–¢–∏–ø —Ç–æ–ø–ª–∏–≤–∞: " + getFuelType());
        System.out.println("–ö–ü–ü: " + getGearShiftBox());
        System.out.println("–¶–≤–µ—Ç: " + getColor());
        System.out.println("–¢–æ–ø–ª–∏–≤–æ –≤ –±–∞–∫–µ: " + getFuelQuantity() + " –ª.");
        System.out.println("–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞: " + getYear());
    }

    /**
     * –ó–∞–ø—Ä–∞–≤–∏—Ç—å –º–∞—à–∏–Ω—É
     * @param volume –û–±—ä–µ–º —Ç–æ–ø–ª–∏–≤–∞ –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –∑–∞–ø—Ä–∞–≤–∏—Ç—å
     * @throws IllegalArgumentException –µ—Å–ª–∏ {@code volume <= 0}
     */
    public abstract void refuelCar(int volume);

    /**
     * –í—ã–≤–µ—Å—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ–º–æ–±–∏–ª—è—Ö, –≤—ã–ø—É—â–µ–Ω–Ω—ã—Ö –ø–æ–∑–∂–µ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –≥–æ–¥–∞ –≤—ã–ø—É—Å–∫–∞
     * @param cars —Å–ø–∏—Å–æ–∫ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π
     * @param year –≥–æ–¥ –≤—ã–ø—É—Å–∫–∞
     */
    public static void findCar(List<Car> cars, int year){
        for(Car car : cars){
            if (car.getYear() < year){
                System.out.println(car.getBrand() + " " + car.getModel() + " - —É—Å—Ç–∞—Ä–µ–≤—à–∏–π –∞–≤—Ç–æ\n");
            } else {
                car.getInfoCar();
                System.out.println();
            }
        }
    }

    /**
     * –ò–∑–º–µ–Ω–∏—Ç—å —Ü–≤–µ—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π
     * @param cars —Å–ø–∏—Å–∫–æ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π
     * @param originalColor —Ü–≤–µ—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª—è, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –ø–æ–º–µ–Ω—è—Ç—å
     * @param newColor –Ω–æ–≤—ã–π —Ü–≤–µ—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª—è
     */
    public static void changeColor(List<Car> cars, String originalColor, String newColor){
        for(Car car : cars){
            if (Objects.equals(car.getColor(), originalColor)){
                car.setColor(newColor);
                System.out.println("–ú–∞—à–∏–Ω–∞ " + car.getBrand() + " " + car.getModel() + " –ø–µ—Ä–µ–∫—Ä–∞—à–µ–Ω–∞ –≤ " + newColor + " —Ü–≤–µ—Ç");
            }
        }
    }

    /**
     * –ó–∞–ø—Ä–∞–≤–∏—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ –∏–∑ —Å–ø–∏—Å–∫–∞
     * @param cars —Å–ø–∏—Å–æ–∫ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –Ω–∞ –∑–∞–ø—Ä–∞–≤–∫—É
     * @param volume –æ–±—ä–µ–º —Ç–æ–ø–ª–∏–≤–∞/—ç–Ω–µ—Ä–≥–∏–∏
     */
    public static void refuelCars(List<Car> cars, int volume){
        for (Car car : cars){
            car.refuelCar(volume);
        }
    }
}
